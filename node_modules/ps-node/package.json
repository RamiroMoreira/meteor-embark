{
  "_args": [
    [
      {
        "raw": "ps-node@https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
        "scope": null,
        "escapedName": "ps-node",
        "name": "ps-node",
        "rawSpec": "https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
        "spec": "https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
        "type": "remote"
      },
      "/home/ramiro/workspace/meteor-embark/example"
    ]
  ],
  "_from": "https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
  "_id": "ps-node@0.0.5",
  "_inCache": true,
  "_location": "/ps-node",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ps-node@https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
    "scope": null,
    "escapedName": "ps-node",
    "name": "ps-node",
    "rawSpec": "https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
    "spec": "https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
  "_shasum": "0e228082df17d5967df184b4d4f55a2430558466",
  "_shrinkwrap": null,
  "_spec": "ps-node@https://github.com/hitchcott/ps/archive/2ace1d34a77a12c62dcc4aee597d93b1a28468b4.tar.gz",
  "_where": "/home/ramiro/workspace/meteor-embark/example",
  "bugs": {
    "url": "https://github.com/neekey/ps/issues"
  },
  "dependencies": {
    "table-parser": "git+https://github.com/hitchcott/table-parser.git#1b6b969f0c4e632df55191ab3a5d0dcaaae23c12"
  },
  "description": "A process lookup utility",
  "devDependencies": {},
  "homepage": "https://github.com/neekey/ps#readme",
  "keywords": [
    "ps",
    "process",
    "lookup",
    "pid"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "ps-node",
  "optionalDependencies": {},
  "readme": "# ps\n\nA Node.js module for looking up running processes.\n\n## Install\n\n```bash\n$ npm install ps-node\n```\n\n## Usage\n\nLookup process with specified `pid`:\n\n```javascript\nvar ps = require('ps-node');\n\n// A simple pid lookup\nps.lookup({ pid: 12345 }, function(err, resultList ) {\n    if (err) {\n        throw new Error( err );\n    }\n\n    var process = resultList[ 0 ];\n\n    if( process ){\n\n        console.log( 'PID: %s, COMMAND: %s, ARGUMENTS: %s', process.pid, process.command, process.arguments );\n    }\n    else {\n        console.log( 'No such process found!' );\n    }\n});\n\n```\n\nOr use RegExp to filter `command` and `arguments`:\n\n```javascript\nvar ps = require('ps-node');\n\n// A simple pid lookup\nps.lookup({\n    command: 'node',\n    arguments: '--debug',\n    }, function(err, resultList ) {\n    if (err) {\n        throw new Error( err );\n    }\n\n    resultList.forEach(function( process ){\n        if( process ){\n\n            console.log( 'PID: %s, COMMAND: %s, ARGUMENTS: %s', process.pid, process.command, process.arguments );\n        }\n    });\n});\n\n```\n\nAlso, you can use `kill` to kill process by `pid`:\n\n```javascript\nvar ps = require('ps-node');\n\n// A simple pid lookup\nps.kill( '12345', function( err ) {\n    if (err) {\n        throw new Error( err );\n    }\n    else {\n        console.log( 'Process %s has been killed!', pid );\n    }\n});\n```\n\nYou can also pass arguments to `lookup` with `psargs` as arguments for `ps` commandï¼ˆNote that `psargs` is not available in windows):\n\n```javascript\nvar ps = require('ps-node');\n\n// A simple pid lookup\nps.lookup({\n    command: 'node',\n    psargs: 'ux'\n    }, function(err, resultList ) {\n    if (err) {\n        throw new Error( err );\n    }\n\n    resultList.forEach(function( process ){\n        if( process ){\n            console.log( 'PID: %s, COMMAND: %s, ARGUMENTS: %s', process.pid, process.command, process.arguments );\n        }\n    });\n});\n\n```\n\nLastly, you can filter a list of items by their PPID by passing a PPID to filter on. You will need to pass in a `psarg` that provides the PPID in the results (`-l` or `-j` for instance).\n\n```javascript\nvar ps = require('ps-node');\n\n// A simple pid lookup\nps.lookup({\n    command: 'mongod',\n    psargs: '-l',\n    ppid: 82292\n    }, function(err, resultList ) {\n    if (err) {\n        throw new Error( err );\n    }\n\n    resultList.forEach(function( process ){\n        if( process ){\n            console.log( 'PID: %s, COMMAND: %s, ARGUMENTS: %s', process.pid, process.command, process.arguments );\n        }\n    });\n});\n\n```\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/neekey/ps.git"
  },
  "version": "0.0.5"
}
